package com.example.researchproject.iam;

import android.content.Context;
import android.graphics.Color;
import android.text.Spannable;
import android.text.SpannableString;
import android.text.style.ForegroundColorSpan;
import android.text.style.StyleSpan;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;
import io.noties.markwon.Markwon;

import com.example.researchproject.R;

import java.util.List;

public class ChatAdapter extends RecyclerView.Adapter<ChatAdapter.ChatViewHolder> {

    private final Context context;
    private final List<ChatMessage> chatMessages;
    private final Markwon markwon; // üëâ Markwon ƒë·ªÉ hi·ªÉn th·ªã Markdown

    public ChatAdapter(Context context, List<ChatMessage> chatMessages) {
        this.context = context;
        this.chatMessages = chatMessages;
        // ‚úÖ Kh·ªüi t·∫°o Markwon
        this.markwon = Markwon.create(context);
    }

    @NonNull
    @Override
    public ChatViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        View view = LayoutInflater.from(context).inflate(R.layout.item_chat, parent, false);
        return new ChatViewHolder(view);
    }

    @Override
    public void onBindViewHolder(@NonNull ChatViewHolder holder, int position) {
        ChatMessage message = chatMessages.get(position);

        // üî• N·∫øu l√† ph·∫£n h·ªìi t·ª´ AI ‚Üí √°p d·ª•ng Markdown
        if (!message.isUser()) {
            markwon.setMarkdown(holder.txtMessage, message.getMessage());
        } else {
            // üí¨ N·∫øu l√† ng∆∞·ªùi d√πng ‚Üí ch·ªâ hi·ªÉn th·ªã vƒÉn b·∫£n b√¨nh th∆∞·ªùng
            holder.txtMessage.setText(message.getMessage());
        }

        // üé® T·∫°o Spannable ƒë·ªÉ l√†m n·ªïi b·∫≠t t·ª´ kh√≥a v√† emoji
        SpannableString spannable = new SpannableString(holder.txtMessage.getText());

        // ‚úÖ T√¥ m√†u t·ª´ kh√≥a "Meko AI"
        String keyword = "Meko AI";
        int start = spannable.toString().indexOf(keyword);
        while (start >= 0) {
            spannable.setSpan(new ForegroundColorSpan(Color.parseColor("#FF5722")),
                    start, start + keyword.length(), Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
            spannable.setSpan(new StyleSpan(android.graphics.Typeface.BOLD),
                    start, start + keyword.length(), Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
            start = spannable.toString().indexOf(keyword, start + 1);
        }

        // üòÑ T√¥ m√†u c√°c emoji
        String[] emojis = {"üòä", "üéâ", "üöÄ", "üî•", "üí°", "üíñ", "üòé", "‚ú®"};
        for (String emoji : emojis) {
            int emojiStart = spannable.toString().indexOf(emoji);
            while (emojiStart >= 0) {
                spannable.setSpan(new ForegroundColorSpan(Color.parseColor("#FFD700")), // M√†u v√†ng
                        emojiStart, emojiStart + emoji.length(), Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
                emojiStart = spannable.toString().indexOf(emoji, emojiStart + 1);
            }
        }

        // üëâ G√°n l·∫°i sau khi ch·ªânh ƒë·ªãnh d·∫°ng
        holder.txtMessage.setText(spannable);

        // üí° ƒê·ªïi avatar v√† m√†u n·ªÅn d·ª±a theo AI ho·∫∑c User
        if (message.isUser()) {
            holder.imgAvatar.setImageResource(R.drawable.user); // Icon ng∆∞·ªùi d√πng
            holder.txtMessage.setBackgroundResource(R.drawable.bg_chat_bubble_user); // N·ªÅn m√†u xanh
        } else {
            holder.imgAvatar.setImageResource(R.drawable.search_icon); // Icon AI
            holder.txtMessage.setBackgroundResource(R.drawable.bg_chat_bubble_ai); // N·ªÅn m√†u x√°m
        }
    }

    @Override
    public int getItemCount() {
        return chatMessages.size();
    }

    static class ChatViewHolder extends RecyclerView.ViewHolder {
        TextView txtMessage;
        ImageView imgAvatar;

        public ChatViewHolder(@NonNull View itemView) {
            super(itemView);
            txtMessage = itemView.findViewById(R.id.txtMessage);
            imgAvatar = itemView.findViewById(R.id.imgAvatar);
        }
    }
}
